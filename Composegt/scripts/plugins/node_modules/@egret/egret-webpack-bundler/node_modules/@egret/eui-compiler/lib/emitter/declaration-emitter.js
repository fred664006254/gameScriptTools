"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeclarationEmitter = void 0;
var _1 = require(".");
var ts_morph_1 = require("ts-morph");
var DeclarationEmitter = /** @class */ (function (_super) {
    __extends(DeclarationEmitter, _super);
    function DeclarationEmitter() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.declaration = '';
        _this.project = null;
        return _this;
    }
    DeclarationEmitter.prototype.getResult = function () {
        return this.declaration;
    };
    DeclarationEmitter.prototype.emitHeader = function (themeData) {
    };
    DeclarationEmitter.prototype.emitSkinNode = function (filename, skinNode) {
        if (!this.project) {
            this.project = new ts_morph_1.Project();
        }
        var project = this.project;
        var sourceFile = project.createSourceFile('output.ts');
        if (skinNode.namespace) {
            var a = sourceFile.getNamespace(skinNode.namespace);
            if (!a) {
                a = sourceFile.addNamespace({
                    hasDeclareKeyword: true,
                    declarationKind: ts_morph_1.NamespaceDeclarationKind.Module,
                    name: skinNode.namespace
                });
            }
            a.addClass({ name: skinNode.classname, extends: 'eui.Skin' });
        }
        else {
            sourceFile.addClass({ name: skinNode.classname, extends: 'eui.Skin' });
        }
        this.declaration = sourceFile.getText();
        project.removeSourceFile(sourceFile);
    };
    return DeclarationEmitter;
}(_1.BaseEmitter));
exports.DeclarationEmitter = DeclarationEmitter;
